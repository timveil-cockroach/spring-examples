# This workflow will build a Java project with Maven
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
      - 'docker/**'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
      - 'docker/**'
  workflow_dispatch:

# Cancel in-progress runs for the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Set minimal permissions
permissions:
  contents: read

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    permissions:
      contents: read
      checks: write  # Required for test-reporter
      pull-requests: write  # Required for PR comments
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        java: [19, 21]
        include:
          - java: 19
            java-distribution: 'temurin'
          - java: 21
            java-distribution: 'temurin'

    steps:
    - name: Checkout Project
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: ${{ matrix.java-distribution }}
        cache: 'maven'
        
    - name: Cache Maven Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Compile Project
      run: mvn -B clean compile --file pom.xml

    - name: Run Tests
      run: mvn -B test -DskipTests=false --file pom.xml
      
    # Test reporting - use different approach for forks vs main repo
    - name: Generate Test Report (Main Repo)
      uses: dorny/test-reporter@v1
      if: (success() || failure()) && github.event_name != 'pull_request'
      with:
        name: Maven Tests - Java ${{ matrix.java }}
        path: '**/target/surefire-reports/TEST-*.xml'
        reporter: java-junit
        
    # For PRs from forks, upload as artifact instead (due to permission restrictions)
    - name: Upload Test Results
      if: (success() || failure()) && github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: test-results-java-${{ matrix.java }}
        path: '**/target/surefire-reports/TEST-*.xml'
        retention-days: 7
        
    - name: Package Application
      run: mvn -B package -DskipTests --file pom.xml
      
    - name: Upload Build Artifacts
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-java-${{ matrix.java }}
        path: |
          **/target/surefire-reports/
          **/target/*.log
        retention-days: 7

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
      
    steps:
    - name: Checkout Project
      uses: actions/checkout@v4
      
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate
        
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout Project
      uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: 19
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Verify Code Formatting
      run: mvn -B verify -DskipTests --file pom.xml